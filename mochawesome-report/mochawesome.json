{
  "stats": {
    "suites": 2,
    "tests": 14,
    "passes": 10,
    "pending": 0,
    "failures": 4,
    "start": "2023-06-06T18:47:42.998Z",
    "end": "2023-06-06T18:48:32.244Z",
    "duration": 49246,
    "testsRegistered": 14,
    "passPercent": 71.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6f971d62-451f-472b-8e6b-c027c18daf6b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
          "title": "UI tests",
          "fullFile": "C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant-ui.spec.ts",
          "file": "C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant-ui.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: Start browser in \"UI tests\"",
              "fullTitle": "UI tests \"before each\" hook: Start browser in \"UI tests\"",
              "timedOut": false,
              "duration": 3930,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        browser = new browser_1.BrowserWrapper();\n        resturantPage = yield browser.newPage(restaurant_page_1.RestaurantPage, config_json_1.default.baseUiUrl);\n        createRestaurantPopup = yield browser.newPage(restaurant_page_2.CreateRestaurantPopup, config_json_1.default.baseUiUrl);\n    })",
              "err": {},
              "uuid": "32a042c4-6d49-40b8-a19b-b67b246445bb",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook: Close browser in \"UI tests\"",
              "fullTitle": "UI tests \"after each\" hook: Close browser in \"UI tests\"",
              "timedOut": false,
              "duration": 98,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        yield browser.close();\n    })",
              "err": {},
              "uuid": "576b381a-3560-430c-bb3f-a7c7d88f8306",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Validate \"Create new Restaurant Popup\" opened",
              "fullTitle": "UI tests Validate \"Create new Restaurant Popup\" opened",
              "timedOut": false,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield resturantPage.clickreateNewRestaurantButtone();\n    let actualResult = yield createRestaurantPopup.checkIfTitleInCreateResturantPopupExcit();\n    (0, chai_1.expect)(actualResult, 'Restaurants popup was not opened').to.be.true;\n});",
              "err": {},
              "uuid": "e786ba5f-9834-4252-8df4-1c088d8d2722",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate \"Restaurants list in UI and API is equals\" ",
              "fullTitle": "UI tests Validate \"Restaurants list in UI and API is equals\" ",
              "timedOut": false,
              "duration": 378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a, _b;\nreturn __awaiter(this, void 0, void 0, function* () {\n    let restaurantsListAPI = yield restaurantsAPI_1.default.getRestaurants();\n    let restaurantsListUI = yield resturantPage.getResturantListLength();\n    console.log((_a = restaurantsListAPI.data) === null || _a === void 0 ? void 0 : _a.length);\n    console.log(restaurantsListUI);\n    (0, chai_1.expect)(((_b = restaurantsListAPI.data) === null || _b === void 0 ? void 0 : _b.length) === restaurantsListUI, 'The length of the list of restaurants in the UI and API does not match').to.be.true;\n});",
              "err": {},
              "uuid": "77f16fb7-9b8c-4482-b19c-fc06657303ad",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate \"new Restaurant created with UI\"",
              "fullTitle": "UI tests Validate \"new Restaurant created with UI\"",
              "timedOut": false,
              "duration": 5311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield resturantPage.clickreateNewRestaurantButtone();\n    const numOfRestaurantbeforCreate = yield resturantPage.getResturantListLength();\n    yield createRestaurantPopup.sendKeysOnIdField();\n    yield createRestaurantPopup.sendKeysOnNameField();\n    yield createRestaurantPopup.sendKeysOnAddressField();\n    yield createRestaurantPopup.sendKeysOnScoreField();\n    yield createRestaurantPopup.clickOnSubmitButton();\n    yield resturantPage.clickOnOKButton();\n    yield resturantPage.checkIfTheResturantListGrewByOne(numOfRestaurantbeforCreate);\n});",
              "err": {},
              "uuid": "4f8c9be5-cb48-4794-9fe9-9f2efe7168ed",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate \"new Restaurant created with API in the UI\"",
              "fullTitle": "UI tests Validate \"new Restaurant created with API in the UI\"",
              "timedOut": false,
              "duration": 10474,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const numOfRestaurantbeforCreate = yield resturantPage.getResturantListLength();\n    const myNewRest = { address: 'My Addess 1', id: 233, name: 'My Restaurant', score: 2.3 };\n    yield restaurantsAPI_1.default.createRestaurant(myNewRest);\n    browser.refreshPage();\n    yield resturantPage.checkIfTheResturantListGrewByOne(numOfRestaurantbeforCreate);\n});",
              "err": {
                "message": "Error: The restaurant list did not grow by one within the specified time.",
                "estack": "Error: The restaurant list did not grow by one within the specified time.\n    at C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\logic\\pages\\restaurant-page.ts:40:15",
                "diff": null
              },
              "uuid": "e8b70f0a-b24e-4c93-b390-4541d90e4ce5",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate \"delete Restaurant with UI\"",
              "fullTitle": "UI tests Validate \"delete Restaurant with UI\"",
              "timedOut": false,
              "duration": 1710,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const newRest = { address: 'PT', id: 1111, name: 'Nati A.S', score: 5 };\n    yield restaurantsAPI_1.default.createRestaurant(newRest);\n    let numOfRestaurantbeforDelete = yield resturantPage.getResturantListLength();\n    browser.refreshPage();\n    yield resturantPage.checkIfTheResturantListGrewByOne(numOfRestaurantbeforDelete);\n    numOfRestaurantbeforDelete++;\n    yield resturantPage.clickOnDeleteFirstResturantButton();\n    yield resturantPage.clickOnOKButton();\n    yield resturantPage.checkIfTheResturantListIsOneLess(numOfRestaurantbeforDelete);\n});",
              "err": {},
              "uuid": "c4ee74fc-1d8c-4363-8611-7eaac0d1fa1a",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate \"delete Restaurant with API in UI\"",
              "fullTitle": "UI tests Validate \"delete Restaurant with API in UI\"",
              "timedOut": false,
              "duration": 1564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const newRest = { address: 'PT', id: 1111, name: 'Nati A.S', score: 5 };\n    yield restaurantsAPI_1.default.createRestaurant(newRest);\n    let numOfRestaurantbeforDelete = yield resturantPage.getResturantListLength();\n    browser.refreshPage();\n    yield resturantPage.checkIfTheResturantListGrewByOne(numOfRestaurantbeforDelete);\n    numOfRestaurantbeforDelete++;\n    yield restaurantsAPI_1.default.deleteRestaurantById(1111);\n    browser.refreshPage();\n    yield resturantPage.checkIfTheResturantListIsOneLess(numOfRestaurantbeforDelete);\n});",
              "err": {},
              "uuid": "c0001011-62d7-4300-9bec-dab3f361d909",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate \"Cancel Create new Restaurant\"",
              "fullTitle": "UI tests Validate \"Cancel Create new Restaurant\"",
              "timedOut": false,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield resturantPage.clickreateNewRestaurantButtone();\n    yield createRestaurantPopup.clickOnCloseButton();\n    yield createRestaurantPopup.checkIfCreateResturantPopupNotExcit();\n});",
              "err": {},
              "uuid": "0a289082-ec6d-4795-adcf-86b9a944be78",
              "parentUUID": "de38399a-641d-41e4-a9b3-5eaa08e1bd43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e786ba5f-9834-4252-8df4-1c088d8d2722",
            "77f16fb7-9b8c-4482-b19c-fc06657303ad",
            "4f8c9be5-cb48-4794-9fe9-9f2efe7168ed",
            "c4ee74fc-1d8c-4363-8611-7eaac0d1fa1a",
            "c0001011-62d7-4300-9bec-dab3f361d909",
            "0a289082-ec6d-4795-adcf-86b9a944be78"
          ],
          "failures": [
            "e8b70f0a-b24e-4c93-b390-4541d90e4ce5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 20058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
          "title": "Restaurants tests",
          "fullFile": "C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts",
          "file": "C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Reset restaurant server in \"Restaurants tests\"",
              "fullTitle": "Restaurants tests \"before all\" hook: Reset restaurant server in \"Restaurants tests\"",
              "timedOut": false,
              "duration": 246,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        //Arrange\n        yield restaurantsAPI_1.default.resetServer();\n    })",
              "err": {},
              "uuid": "9995dd82-7507-4a5b-b638-ea72546d9614",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate the amount of restaurants",
              "fullTitle": "Restaurants tests Validate the amount of restaurants",
              "timedOut": false,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        //Act\n        const restaurants = yield restaurantsAPI_1.default.getRestaurants();\n        //Assert\n        (0, chai_1.expect)(restaurants.success).to.be.true;\n        const actualAmount = (_a = restaurants.data) === null || _a === void 0 ? void 0 : _a.length;\n        (0, chai_1.expect)(actualAmount).to.equal(3, 'Restaurants amount is not as expected');\n    })",
              "err": {},
              "uuid": "7b7728ea-c07f-4faf-bc8c-dc03fcb71392",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get restaurant by id",
              "fullTitle": "Restaurants tests Get restaurant by id",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        //Arrange\n        const myNewRest = { address: 'My Addess 1', id: 233, name: 'My Restaurant', score: 2.3 };\n        const createResponse = yield restaurantsAPI_1.default.createRestaurant(myNewRest);\n        //Act\n        const getByIdResponse = yield restaurantsAPI_1.default.getRestaurantById(233);\n        //Assert\n        (0, chai_1.expect)(getByIdResponse.status).to.equal(200);\n        (0, chai_1.expect)(getByIdResponse.success).to.be.true;\n        (0, chai_1.expect)(getByIdResponse.data).to.deep.equal(myNewRest);\n    })",
              "err": {},
              "uuid": "41aadc8f-f8d2-496b-90dd-0e29d591957a",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get non exsisting restaurant",
              "fullTitle": "Restaurants tests Get non exsisting restaurant",
              "timedOut": false,
              "duration": 240,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        //Act\n        const getByIdResponse = yield restaurantsAPI_1.default.getRestaurantById(233);\n        //Assert\n        (0, chai_1.expect)(getByIdResponse.error).to.equal('restaurant with given id not found');\n        (0, chai_1.expect)(getByIdResponse.success).to.be.false;\n        (0, chai_1.expect)(getByIdResponse.status).to.equal(404);\n    })",
              "err": {
                "message": "AssertionError: expected undefined to equal 'restaurant with given id not found'",
                "estack": "AssertionError: expected undefined to equal 'restaurant with given id not found'\n    at C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts:42:38\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts:5:58)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "ff79280e-cecd-4e9b-bcea-d60c159f8851",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new restaurant",
              "fullTitle": "Restaurants tests Create new restaurant",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        //Arrange\n        const myNewRest = { address: 'PT', id: 1111, name: 'Nati A.S', score: 5 };\n        const createResponse = yield restaurantsAPI_1.default.createRestaurant(myNewRest);\n        //Act\n        const getByIdResponse = yield restaurantsAPI_1.default.getRestaurantById(myNewRest.id);\n        //Assert\n        (0, chai_1.expect)(createResponse.status).to.equal(201);\n        (0, chai_1.expect)(createResponse.success).to.be.true;\n        (0, chai_1.expect)(getByIdResponse.data).to.deep.equal(myNewRest);\n    })",
              "err": {},
              "uuid": "b7791cc2-0b9e-41b5-ade8-2e92e0c97fd2",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new restaurant with an existing ID number",
              "fullTitle": "Restaurants tests Create new restaurant with an existing ID number",
              "timedOut": false,
              "duration": 473,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        //Arrange\n        const firstRest = { address: 'PT', id: 45, name: 'Nati A.S', score: 5 };\n        const secondRest = { address: 'TLV', id: 45, name: 'Nati A.S2', score: 5 };\n        yield restaurantsAPI_1.default.createRestaurant(firstRest);\n        const createSecResponse = yield restaurantsAPI_1.default.createRestaurant(secondRest);\n        //Assert\n        (0, chai_1.expect)(createSecResponse.status).to.equal(409);\n        (0, chai_1.expect)(createSecResponse.success).to.be.false;\n    })",
              "err": {
                "message": "AssertionError: expected 201 to equal 409",
                "estack": "AssertionError: expected 201 to equal 409\n    at C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts:79:41\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts:5:58)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 201\n+ 409\n"
              },
              "uuid": "9cda7b6f-b551-4542-ba37-fec74f16af4e",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete existing restaurant",
              "fullTitle": "Restaurants tests Delete existing restaurant",
              "timedOut": false,
              "duration": 718,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        //Arrange\n        const newRest = { address: 'PT', id: 1111, name: 'Nati A.S', score: 5 };\n        const createResponse = yield restaurantsAPI_1.default.createRestaurant(newRest);\n        const DeleteResponse = yield restaurantsAPI_1.default.deleteRestaurantById(newRest.id);\n        //Act\n        const getByIdResponse = yield restaurantsAPI_1.default.getRestaurantById(newRest.id);\n        //Assert\n        // מתלבט אם לעשות את הווידוא הזה שהמסעדה אכן נוצרה\n        (0, chai_1.expect)(createResponse.status).to.equal(201);\n        (0, chai_1.expect)(DeleteResponse.status).to.equal(200);\n        (0, chai_1.expect)(DeleteResponse.success).to.be.true;\n        (0, chai_1.expect)(getByIdResponse.success).to.be.false;\n        (0, chai_1.expect)(getByIdResponse.status).to.equal(404);\n    })",
              "err": {
                "message": "AssertionError: expected true to be false",
                "estack": "AssertionError: expected true to be false\n    at C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts:108:42\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\Netanel\\Desktop\\AutoMission\\candidate-test\\src\\tests\\restaurant.spec.ts:5:58)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- true\n+ false\n"
              },
              "uuid": "027971a8-3af8-47f9-9e56-35fe668deb7e",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete a restaurant that does not exist",
              "fullTitle": "Restaurants tests Delete a restaurant that does not exist",
              "timedOut": false,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        //Arrange\n        const DeleteResponse = yield restaurantsAPI_1.default.deleteRestaurantById(1);\n        //Assert\n        (0, chai_1.expect)(DeleteResponse.error).to.equal('restaurant with given id not found');\n        (0, chai_1.expect)(DeleteResponse.success).to.be.false;\n        (0, chai_1.expect)(DeleteResponse.status).to.equal(404);\n    })",
              "err": {},
              "uuid": "267d374f-4922-406b-b531-c968d7e879ad",
              "parentUUID": "7b76ce36-ff24-466c-9f18-1f4975f8174f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b7728ea-c07f-4faf-bc8c-dc03fcb71392",
            "41aadc8f-f8d2-496b-90dd-0e29d591957a",
            "b7791cc2-0b9e-41b5-ade8-2e92e0c97fd2",
            "267d374f-4922-406b-b531-c968d7e879ad"
          ],
          "failures": [
            "ff79280e-cecd-4e9b-bcea-d60c159f8851",
            "9cda7b6f-b551-4542-ba37-fec74f16af4e",
            "027971a8-3af8-47f9-9e56-35fe668deb7e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}